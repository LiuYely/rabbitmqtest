package com.example.springbootproducer.consumer;

import java.util.Map;

import org.springframework.amqp.rabbit.annotation.Exchange;
import org.springframework.amqp.rabbit.annotation.Queue;
import org.springframework.amqp.rabbit.annotation.QueueBinding;
import org.springframework.amqp.rabbit.annotation.RabbitHandler;
import org.springframework.amqp.rabbit.annotation.RabbitListener;
import org.springframework.amqp.support.AmqpHeaders;
import org.springframework.messaging.handler.annotation.Headers;
import org.springframework.messaging.handler.annotation.Payload;
import org.springframework.stereotype.Component;

import com.example.springbootproducer.entity.Order;
import com.rabbitmq.client.Channel;

@Component
public class Receiver {

	@RabbitListener(bindings = @QueueBinding(
			value = @Queue(value = "order_queue",durable = "true"),
			exchange = @Exchange(name = "order_exchange",durable = "true",type = "topic"),
			key = "order.#"
		)
	)
	@RabbitHandler//表示接收的方法
	public void onTestMessage(@Payload Order order, //接收消息体
			@Headers Map<String, Object> headers,//获取消息头需要用Map接收 
			Channel channel) throws Exception {//手动签收需要通道
		
		
		
		Long deliveryTag = (Long)headers.get(AmqpHeaders.DELIVERY_TAG);
		//手动签收需要我们自己确认
		channel.basicAck(deliveryTag, false);
		System.out.println("接收到消息"+order.getMessageId());
		
	}
}
